# Whether to enable Vircle block submitter agent.
vircle.superblock.submitter.enabled = true

# Whether to enable Vircle block challenger agent.
vircle.superblock.challenger.enabled = true

# network mode (integration for testnet)
# constants = integration
constants = mainnet

# Gas price ranges, will get gas price from secondary url and cap out at 20 gWei

gas.price.min = 1000000000 // 1 gWei (minimum safe number, should change this based on market for avg/fast confirmation)
gas.price.max = 20000000000 // 20 gWei
# Gas limit used for all the txs
gas.limit = 5000000

# Address and unlocked account password used for sending/defending superblocks and contract calls that don't consume gas.
# Example:
# general.purpose.and.send.superblocks.address = 0x602432cb3aeb6fdb53ab6bb57322f027db9c4853
# general.purpose.and.send.superblocks.unlockpw = "111111"

general.purpose.and.send.superblocks.address = TCMbaMxA5gYSxmABJjwt4cAHELRYDZrVA1
general.purpose.and.send.superblocks.unlockpw = 111111

# Address and unlocking account password used for challenging invalid superblocks.
# Example:
#vircle.superblock.challenger.address = 0x602432cb3aeb6fdb53ab6bb57322f027db9c4853
#vircle.superblock.challenger.unlockpw = "111111"

#53419dd04cbad62e70aaf289b840bab2e1cf9ed68528ffb8818c39b0af3b2350
vircle.superblock.challenger.address = TCMbaMxA5gYSxmABJjwt4cAHELRYDZrVA1
vircle.superblock.challenger.unlockpw = 111111

# Directory where vircletrx agents store vircle blockchain.
# Example:
data.directory = /mnt/ethereum/agents/vcl-trx-superblock

# Vircle RPC settings, you only need to worry about this if you are hosting the agent and accessing the REST API, set this to empty otherwise
# Example:
virclerpc.user = chain
virclerpc.password = 999000
#virclerpc.url_and_port = "http://68.79.34.218:9806/"
virclerpc.url_and_port = "http://8.136.109.110:9142"
virclehost.url = 8.136.109.110

agent.mailer.enabled = false

# agent.mailer {
#     enabled: true,
#     smtp {
#         # See https://myaccount.google.com/lesssecureapps
#         host: "smtp.gmail.com",
#         port: 587,
#         username: "your_username",
#         password: "your_pass",
#         transportStrategy: "SMTP_TLS"  # Supported values: "SMTP", "SMTP_TLS" and "SMTPS"
#     },
#     challenge.notifier {
#         trigger: "MY_BLOCK",  # Supported values: "MY_BLOCK", "ANY_BLOCK"
#         from: "no-reply@example.com",
#         to: "john@doe.com",
#         subject: "Vircle agent challenges superblock(s)!"
#     }
# }

# Secondary HTTP provider for web3j to read superblock information, this should be a dedicated fullnode or something like Infura
# Example:
# secondary.url = "https://mainnet.infura.io/v3/4889fed1249f42d1bb6b66c7be01f71b"
secondary.url = "https://rinkeby.infura.io/v3/4889fed1249f42d1bb6b66c7be01f71b"

tron.network = shasta
txon.private.key = 53419dd04cbad62e70aaf289b840bab2e1cf9ed68528ffb8818c39b0af3b2350  // TCMbaMxA5gYSxmABJjwt4cAHELRYDZrVA1
#009d08b00d46245b44f36fdb350a90a9e815bc7b85b7611770067909b56fd939    // TYNqvHC3GN4DGY2aKYYv5QCFJHWJMkEdrA

web3j.parity.mode = true
# geth.rpc.url_and_port = "http://52.82.14.63:8745/"
geth.rpc.url_and_port = "http://52.82.14.63:8845/"

# Whether to automatically withdraw funds after a battle is finished
withdraw.funds.enabled = true

# Upper bound for deposited funds; some will be withdrawn if they surpass this limit
deposited.funds.limit = 3000000000 // 3000 trx to keep in deposit to minimize time/cost for operational duty of agent

# SSL settings for REST server
server.enabled = true
server.ssl.key-store="/mnt/ethereum/agents/vircletrx-agents/key.jks"
server.ssl.key-store-password=111111
