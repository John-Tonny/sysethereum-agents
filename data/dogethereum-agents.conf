# Whether to enable Doge block submitter agent.
doge.superblock.submitter.enabled = true

# Whether to enable Doge block challenger agent.
doge.superblock.challenger.enabled = true

# local (when using doge regtest and eth ganache) or integration (when using doge mainnet and eth rinkeby)
constants = integration
# constants = integration
# constants = ethganachedogemain

# Minimum gas price used for all the txs
# Gas price is estimated by the ethereum node. If ethereum node estimate is bellow
# gas.price.min value, gas.price.min value will be used instead.
gas.price.min = 1

# Gas limit used for all the txs
gas.limit = 1000000

# Address used for sending/defending superblocks and contract calls that don't consume gas.
# In local mode, no need to specify this, it is taken from web3.eth.accounts[0]
# Example:
general.purpose.and.send.superblocks.address = 0x1a8d58bc7390f55d060bb78cf8f8cae953ce9b94

# Address used for challenging invalid superblocks.
# In local mode, no need to specify this, it is taken from web3.eth.accounts[1]
# Example:
doge.superblock.challenger.address = 0x1a8d58bc7390f55d060bb78cf8f8cae953ce9b94


# Directory where truffle places contract jsons. Just used on local mode
# Example:
truffle.build.contracts.directory = /Users/jsidhu/Documents/GitHub/sysethereum-contracts1/build/contracts

# Directory where dogethereum agents store doge blockchain.
# Example:
data.directory = /Users/jsidhu/Documents/GitHub/syscoin/src/qt/node1


# Whether to automatically withdraw funds after a battle is finished
withdraw.funds.enabled = true

# Upper bound for deposited funds; some will be withdrawn if they surpass this limit
deposited.funds.limit = 100