# Whether to enable Syscoin block submitter agent.
syscoin.superblock.submitter.enabled = true

# Whether to enable Syscoin block challenger agent.
syscoin.superblock.challenger.enabled = true

# local (when using syscoin regtest and eth ganache) or integration (when using syscoin mainnet and eth rinkeby)
constants = integration
# constants = local
# constants = ethganachesyscoinmain

# Minimum gas price used for all the txs
# Gas price is estimated by the ethereum node. If ethereum node estimate is bellow
# gas.price.min value, gas.price.min value will be used instead.
gas.price.min = 1

# Gas limit used for all the txs
gas.limit = 1000000

# Address used for sending/defending superblocks and contract calls that don't consume gas.
# In local mode, no need to specify this, it is taken from web3.eth.accounts[0]
# Example:
general.purpose.and.send.superblocks.address = 0x3dddfea5b9adc24a45ad3339e1e40bfeed1fc573

# Address used for challenging invalid superblocks.
# In local mode, no need to specify this, it is taken from web3.eth.accounts[1]
# Example:
syscoin.superblock.challenger.address = 0x3dddfea5b9adc24a45ad3339e1e40bfeed1fc573


# Directory where truffle places contract jsons. Just used on local mode
# Example:
truffle.build.contracts.directory = /Users/jsidhu/Documents/GitHub/sysethereum-contracts1/build/contracts

# Directory where sysethereum agents store syscoin blockchain.
# Example:
data.directory = /Users/jsidhu/Documents/GitHub/syscoin/src/test/node1/testnet3

# Syscoin RPC settings, you only need to worry about this if you are hosting the agent and accessing the REST API
# Example:
syscoinrpc.user = u
syscoinrpc.password = p
syscoinrpc.url_and_port = "http://localhost:18370/"


# Whether to automatically withdraw funds after a battle is finished
withdraw.funds.enabled = true

# Upper bound for deposited funds; some will be withdrawn if they surpass this limit
deposited.funds.limit = 100